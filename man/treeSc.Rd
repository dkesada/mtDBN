% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treeSc.R
\name{treeSc}
\alias{treeSc}
\title{R6 class that defines a tree scheme}
\description{
R6 class that defines a tree scheme

R6 class that defines a tree scheme
}
\details{
The causal lists will be the base of the positions and the velocities
in the pso part of the algorithm.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{tree_rpart}}{the original rpart object}

\item{\code{tree_sc}}{the tree structure scheme}

\item{\code{n_nodes}}{the total number of nodes in the tree}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{tree_rpart}}{the original rpart object}

\item{\code{tree_sc}}{the tree structure scheme}

\item{\code{n_nodes}}{the total number of nodes in the tree}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{treeSc$new()}}
\item \href{#method-get_tree_sc}{\code{treeSc$get_tree_sc()}}
\item \href{#method-classify_dt}{\code{treeSc$classify_dt()}}
\item \href{#method-classify_inst}{\code{treeSc$classify_inst()}}
\item \href{#method-get_rtree}{\code{treeSc$get_rtree()}}
\item \href{#method-clone}{\code{treeSc$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create the tree scheme with a rpart tree
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{treeSc$new(tree)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tree}}{the rpart tree that we want to get the structure from}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new 'treeSc' object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_tree_sc"></a>}}
\if{latex}{\out{\hypertarget{method-get_tree_sc}{}}}
\subsection{Method \code{get_tree_sc()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{treeSc$get_tree_sc()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-classify_dt"></a>}}
\if{latex}{\out{\hypertarget{method-classify_dt}{}}}
\subsection{Method \code{classify_dt()}}{
Given a dataset, return a new data.table with the appropriate model for
each row. Used for dividing each instance for different dbn training.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{treeSc$classify_dt(dt)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dt}}{the dataset to be classified}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a dataset with the nodes that each instance falls into
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-classify_inst"></a>}}
\if{latex}{\out{\hypertarget{method-classify_inst}{}}}
\subsection{Method \code{classify_inst()}}{
Given an instance, return the appropriate node
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{treeSc$classify_inst(inst)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inst}}{a row from a data.table}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the environment of the corresponding node
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_rtree"></a>}}
\if{latex}{\out{\hypertarget{method-get_rtree}{}}}
\subsection{Method \code{get_rtree()}}{
Getter of the original rpart tree
--ICO-Merge: delete if it remains unused
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{treeSc$get_rtree()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
the original rpart object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{treeSc$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
